"""
    Script to plot the newCO2 control annual ocean heat content and ocean carbon content
"""

import iris
import iris.analysis.cartography
import iris.coord_categorisation
import iris.quickplot as qplt
import matplotlib.pyplot as plt
import numpy as np
import glob
import time
import numpy as np
from scipy import signal

# Today's Date:
timestr = time.strftime('%m%d%Y')

# Data Paths:
PATH = '~/control_aredi800/data/'

# Load Data:
dic = iris.load_cube(PATH+'dic.nc')
temp = iris.load_cube(PATH+'temp.nc')
rhodzt = iris.load_cube(PATH+'rhodzt')
area = iris.load_cube(PATH+'area_t.nc')

mld = iris.load_cube(PATH+'mld.nc')


# Southern Ocean
SH = iris.Constraint(latitude=lambda y: -90 < y < -50)
dic_SH = dic.extract(SH)
heat_SH = heat.extract(SH)

# Vertical Sum
dic_pole_vertsum = dic_pole.collapsed('tcell pstar', iris.analysis.SUM)
heat_pole_vertsum = heat_pole.collapsed('tcell pstar', iris.analysis.SUM)

heat_vertsum = heat.collapsed('tcell pstar', iris.analysis.SUM)
dic_vertsum = dic.collapsed('tcell pstar', iris.analysis.SUM)

# Sum
dic_vertsum_weighted = dic_vertsum*area_t
dic_total = dic_vertsum_weighted.collapsed(['longitude', 'latitude'], iris.analysis.SUM)

heat_vertsum_weighted = heat_vertsum*area_t
heat_total = heat_vertsum_weighted.collapsed(['longitude', 'latitude'], iris.analysis.SUM)

dic_pole_vertsum.coord('latitude').guess_bounds()
dic_pole_vertsum.coord('longitude').guess_bounds()
grid_areas = iris.analysis.cartography.area_weights(dic_pole_vertsum)
dic_pole_vertsum_weighted = dic_pole_vertsum*grid_areas
dic_pole_total = dic_pole_vertsum_weighted.collapsed(['longitude', 'latitude'], iris.analysis.SUM)

heat_pole_vertsum.coord('latitude').guess_bounds()
heat_pole_vertsum.coord('longitude').guess_bounds()
grid_areas = iris.analysis.cartography.area_weights(heat_pole_vertsum)
heat_pole_vertsum_weighted = heat_pole_vertsum*grid_areas
heat_pole_total = heat_pole_vertsum_weighted.collapsed(['longitude', 'latitude'], iris.analysis.SUM)

# Time mean
dic_pole_total_mean = dic_pole_total.collapsed('year', iris.analysis.MEAN).data
heat_pole_total_mean = heat_pole_total.collapsed('year', iris.analysis.MEAN).data

heat_mean = heat_total.collapsed('year', iris.analysis.MEAN).data
dic_mean = dic_total.collapsed('year', iris.analysis.MEAN).data

# Detrend
#Detrend global
global_dic_anomoly = dic_total.data-dic_mean
global_carbon = signal.detrend(global_dic_anomoly)

pole_carbon_anomoly = dic_pole_total.data-dic_pole_total_mean
dic_pole = signal.detrend(pole_carbon_anomoly)


# Convection temp metric
temp_convect = temp[:,18:22]
temp_convect = temp_convect.collapsed('tcell pstar', iris.analysis.MEAN)


# Timeseries
fig = plt.figure(figsize = (8, 10))
ax1 = fig.add_axes([0.1,0.7,0.8,0.22])
ax1.plot(mld.coord('year').points, mld.data, color = 'k', lw = 1.5)
plt.gca().invert_yaxis()
ax2 = ax1.twinx()
ax2.plot(mld.coord('year').points, temp_convect.data, color = 'g', lw = 1.5)
plt.title('(a) Convection', fontsize = 12)
ax1.set_ylabel('Depth (m)')
ax2.set_ylabel('Degrees C')
plt.xticks([2000,2100, 2200, 2300, 2400, 2500], [' ',' ', ' ', ' ', ' ', ' '])


ax1 = fig.add_axes([0.1,0.42,0.8,0.22])
ax1.plot(heat_pole_total.coord('year').points, (heat_pole_total.data-heat_pole_total_mean)/1e22, color = 'b', lw = 1.5, label = 'Tropics')
ax1.plot(heat_total.coord('year').points, (heat_total.data-heat_mean)/1e22, color = 'k', lw = 1.5, label = 'Global')
plt.title('(b) Heat Content', fontsize = 12)
plt.axhline(0, color = 'k', ls = '--')
plt.ylabel('$10^{22}$ Joules')
plt.ylim([-6, 6])
plt.xticks([2000,2100, 2200, 2300, 2400, 2500], [' ',' ', ' ', ' ', ' ', ' '])


ax1 = fig.add_axes([0.1,0.12,0.8,0.22])
ax1.plot(dic_pole_total.coord('year').points, (dic_pole)/1e15, color = 'b', lw = 1.5, label = 'Southern Ocean')
ax1.plot(dic_pole_total.coord('year').points, (global_carbon)/1e15, color = 'k', lw = 1.5, label = 'Global')
plt.title('(c) Carbon Content', fontsize = 12)
plt.ylabel('Pg Carbon')
plt.axhline(0, color = 'k', ls = '--')
plt.legend(fontsize = 11)
plt.ylim([-5, 5])
ax1.set_xlabel('Time (years)')
plt.savefig('/home/jthom143/diary_hhpc/figs_poster/carbon_heat_convection.png', bbox_inches='tight')



plt.show()





